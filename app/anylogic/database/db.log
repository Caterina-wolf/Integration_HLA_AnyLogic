/*C2*/SET SCHEMA PUBLIC
CREATE TABLE IF NOT EXISTS AL_CONFIGURATION ( PROPERTY_NAME VARCHAR(255) NOT NULL UNIQUE , PROPERTY_VALUE LONGVARCHAR ) 
CREATE TABLE IF NOT EXISTS AL_GROUPS ( GROUP_NAME VARCHAR(255) NOT NULL PRIMARY KEY , DESCRIPTION LONGVARCHAR ) 
CREATE TABLE IF NOT EXISTS AL_TABLES ( TABLE_NAME VARCHAR(255) NOT NULL PRIMARY KEY , GROUP_NAME VARCHAR(255) , DESCRIPTION LONGVARCHAR ) 
CREATE TABLE IF NOT EXISTS AL_CUSTOM_TYPE ( TABLE_NAME VARCHAR(255) , COLUMN_NAME VARCHAR(255) , TYPE VARCHAR(255) , NAME VARCHAR(255) ) 
CREATE TABLE IF NOT EXISTS AL_VIEWS ( VIEW_NAME VARCHAR(255) NOT NULL UNIQUE , VIEW_DEFINITION LONGVARCHAR , IS_VALID BOOLEAN ) 
CREATE TABLE IF NOT EXISTS AL_SELECTED_LOG_OBJECTS ( NAME VARCHAR(255) NOT NULL UNIQUE , TYPE VARCHAR(255) ) 
CREATE TABLE IF NOT EXISTS AL_DB_OBJECTS ( NAME VARCHAR(255) NOT NULL UNIQUE , TYPE VARCHAR(255) , USAGE VARCHAR(255) ) 
/*C3*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'carsimb.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'com.anylogic.libraries.processmodeling.Source')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<Source>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'com.anylogic.libraries.processmodeling.Sink')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'?<Sink>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'carsimb.CarAgent')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'?<CarAgent>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(4,'com.anylogic.libraries.processmodeling.MoveTo')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(9,4,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.sourceCarl','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalType','MANUAL')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalMode','AFTER_TIMEOUT')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rateSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'modifyRate','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'setAgentParametersFromDB','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'databaseTable','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'multipleEntitiesPerArrival','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'limitArrivals','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'maxArrivals','1000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationType','LOCATION_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'enableCustomStartTime','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'startTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'pushProtocol','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'discardHangingEntities','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=6
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'root.exitCarl','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=8
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'root.carCarl','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=9
INSERT INTO AGENTS_RAW_LOG VALUES(9,4,'root.moveTo','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'destinationType','DEST_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'straightMovement','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'destinationUseRotation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'restoreSpeedOnArrival','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(5,'com.anylogic.libraries.processmodeling.PMLSettings')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(16,5,'?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(6,'com.anylogic.libraries.processmodeling.Enter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(19,6,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(7,'com.anylogic.libraries.processmodeling.SelectOutput')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(30,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(8,'com.anylogic.libraries.processmodeling.ResourceTaskEnd')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(36,8,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(52,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(60,6,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(64,4,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(71,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(77,8,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(93,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=16
INSERT INTO AGENTS_RAW_LOG VALUES(16,5,'root.?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'offsetForAttachedUnits','10.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'animationLocationInitialCapacity','100')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'enableStatsByDefault','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=19
INSERT INTO AGENTS_RAW_LOG VALUES(19,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=23
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=30
INSERT INTO AGENTS_RAW_LOG VALUES(30,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(30,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=36
INSERT INTO AGENTS_RAW_LOG VALUES(36,8,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=52
INSERT INTO AGENTS_RAW_LOG VALUES(52,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(52,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=60
INSERT INTO AGENTS_RAW_LOG VALUES(60,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=64
INSERT INTO AGENTS_RAW_LOG VALUES(64,4,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=71
INSERT INTO AGENTS_RAW_LOG VALUES(71,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(71,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=77
INSERT INTO AGENTS_RAW_LOG VALUES(77,8,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=93
INSERT INTO AGENTS_RAW_LOG VALUES(93,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(93,'conditionIsProbabilistic','false')
COMMIT
DISCONNECT
/*C4*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'carsimb.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'com.anylogic.libraries.processmodeling.Source')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<Source>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'com.anylogic.libraries.processmodeling.Sink')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'?<Sink>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'carsimb.CarAgent')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'?<CarAgent>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(4,'com.anylogic.libraries.processmodeling.MoveTo')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(9,4,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.sourceCarl','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalType','MANUAL')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalMode','AFTER_TIMEOUT')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rateSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'modifyRate','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'setAgentParametersFromDB','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'databaseTable','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'multipleEntitiesPerArrival','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'limitArrivals','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'maxArrivals','1000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationType','LOCATION_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'enableCustomStartTime','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'startTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'pushProtocol','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'discardHangingEntities','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=6
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'root.exitCarl','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=8
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'root.carCarl','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=9
INSERT INTO AGENTS_RAW_LOG VALUES(9,4,'root.moveTo','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'destinationType','DEST_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'straightMovement','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'destinationUseRotation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'restoreSpeedOnArrival','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(5,'com.anylogic.libraries.processmodeling.PMLSettings')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(16,5,'?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(6,'com.anylogic.libraries.processmodeling.Enter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(19,6,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(7,'com.anylogic.libraries.processmodeling.SelectOutput')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(30,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(8,'com.anylogic.libraries.processmodeling.ResourceTaskEnd')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(36,8,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(52,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(60,6,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(64,4,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(71,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(77,8,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(93,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=16
INSERT INTO AGENTS_RAW_LOG VALUES(16,5,'root.?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'offsetForAttachedUnits','10.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'animationLocationInitialCapacity','100')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'enableStatsByDefault','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=19
INSERT INTO AGENTS_RAW_LOG VALUES(19,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=23
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=30
INSERT INTO AGENTS_RAW_LOG VALUES(30,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(30,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=36
INSERT INTO AGENTS_RAW_LOG VALUES(36,8,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=52
INSERT INTO AGENTS_RAW_LOG VALUES(52,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(52,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=60
INSERT INTO AGENTS_RAW_LOG VALUES(60,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=64
INSERT INTO AGENTS_RAW_LOG VALUES(64,4,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=71
INSERT INTO AGENTS_RAW_LOG VALUES(71,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(71,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=77
INSERT INTO AGENTS_RAW_LOG VALUES(77,8,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=93
INSERT INTO AGENTS_RAW_LOG VALUES(93,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(93,'conditionIsProbabilistic','false')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,3,'update')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:00.100000')
COMMIT
DISCONNECT
/*C5*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'carsimb.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'com.anylogic.libraries.processmodeling.Source')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<Source>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'com.anylogic.libraries.processmodeling.Sink')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'?<Sink>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'carsimb.CarAgent')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'?<CarAgent>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(4,'com.anylogic.libraries.processmodeling.MoveTo')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(9,4,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.sourceCarl','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalType','MANUAL')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalMode','AFTER_TIMEOUT')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rateSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'modifyRate','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'setAgentParametersFromDB','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'databaseTable','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'multipleEntitiesPerArrival','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'limitArrivals','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'maxArrivals','1000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationType','LOCATION_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'enableCustomStartTime','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'startTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'pushProtocol','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'discardHangingEntities','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=6
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'root.exitCarl','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=8
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'root.carCarl','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=9
INSERT INTO AGENTS_RAW_LOG VALUES(9,4,'root.moveTo','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'destinationType','DEST_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'straightMovement','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'destinationUseRotation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'restoreSpeedOnArrival','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(5,'com.anylogic.libraries.processmodeling.PMLSettings')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(16,5,'?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(6,'com.anylogic.libraries.processmodeling.Enter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(19,6,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(7,'com.anylogic.libraries.processmodeling.SelectOutput')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(30,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(8,'com.anylogic.libraries.processmodeling.ResourceTaskEnd')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(36,8,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(52,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(60,6,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(64,4,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(71,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(77,8,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(93,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=16
INSERT INTO AGENTS_RAW_LOG VALUES(16,5,'root.?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'offsetForAttachedUnits','10.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'animationLocationInitialCapacity','100')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'enableStatsByDefault','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=19
INSERT INTO AGENTS_RAW_LOG VALUES(19,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=23
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=30
INSERT INTO AGENTS_RAW_LOG VALUES(30,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(30,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=36
INSERT INTO AGENTS_RAW_LOG VALUES(36,8,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=52
INSERT INTO AGENTS_RAW_LOG VALUES(52,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(52,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=60
INSERT INTO AGENTS_RAW_LOG VALUES(60,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=64
INSERT INTO AGENTS_RAW_LOG VALUES(64,4,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=71
INSERT INTO AGENTS_RAW_LOG VALUES(71,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(71,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=77
INSERT INTO AGENTS_RAW_LOG VALUES(77,8,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=93
INSERT INTO AGENTS_RAW_LOG VALUES(93,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(93,'conditionIsProbabilistic','false')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,3,'update')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:00.100000')
COMMIT
DISCONNECT
/*C6*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'carsimb.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'com.anylogic.libraries.processmodeling.Source')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<Source>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'com.anylogic.libraries.processmodeling.Sink')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'?<Sink>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'carsimb.CarAgent')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'?<CarAgent>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(4,'com.anylogic.libraries.processmodeling.MoveTo')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(9,4,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.sourceCarl','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalType','MANUAL')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalMode','AFTER_TIMEOUT')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rateSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'modifyRate','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'setAgentParametersFromDB','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'databaseTable','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'multipleEntitiesPerArrival','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'limitArrivals','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'maxArrivals','1000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationType','LOCATION_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'enableCustomStartTime','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'startTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'pushProtocol','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'discardHangingEntities','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=6
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'root.exitCarl','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=8
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'root.carCarl','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=9
INSERT INTO AGENTS_RAW_LOG VALUES(9,4,'root.moveTo','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'destinationType','DEST_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'straightMovement','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'destinationUseRotation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'restoreSpeedOnArrival','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(5,'com.anylogic.libraries.processmodeling.PMLSettings')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(16,5,'?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(6,'com.anylogic.libraries.processmodeling.Enter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(19,6,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(7,'com.anylogic.libraries.processmodeling.SelectOutput')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(30,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(8,'com.anylogic.libraries.processmodeling.ResourceTaskEnd')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(36,8,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(52,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(60,6,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(64,4,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(71,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(77,8,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(93,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=16
INSERT INTO AGENTS_RAW_LOG VALUES(16,5,'root.?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'offsetForAttachedUnits','10.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'animationLocationInitialCapacity','100')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'enableStatsByDefault','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=19
INSERT INTO AGENTS_RAW_LOG VALUES(19,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=23
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=30
INSERT INTO AGENTS_RAW_LOG VALUES(30,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(30,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=36
INSERT INTO AGENTS_RAW_LOG VALUES(36,8,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=52
INSERT INTO AGENTS_RAW_LOG VALUES(52,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(52,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=60
INSERT INTO AGENTS_RAW_LOG VALUES(60,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=64
INSERT INTO AGENTS_RAW_LOG VALUES(64,4,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=71
INSERT INTO AGENTS_RAW_LOG VALUES(71,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(71,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=77
INSERT INTO AGENTS_RAW_LOG VALUES(77,8,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=93
INSERT INTO AGENTS_RAW_LOG VALUES(93,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(93,'conditionIsProbabilistic','false')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,3,'update')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:00.100000')
COMMIT
DISCONNECT
/*C7*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'carsimb.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'com.anylogic.libraries.processmodeling.Source')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<Source>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'com.anylogic.libraries.processmodeling.Sink')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'?<Sink>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'carsimb.CarAgent')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'?<CarAgent>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(4,'com.anylogic.libraries.processmodeling.MoveTo')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(9,4,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.sourceCarl','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalType','MANUAL')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalMode','AFTER_TIMEOUT')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rateSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'modifyRate','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'setAgentParametersFromDB','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'databaseTable','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'multipleEntitiesPerArrival','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'limitArrivals','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'maxArrivals','1000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationType','LOCATION_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'enableCustomStartTime','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'startTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'pushProtocol','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'discardHangingEntities','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=6
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'root.exitCarl','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=8
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'root.carCarl','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=9
INSERT INTO AGENTS_RAW_LOG VALUES(9,4,'root.moveTo','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'destinationType','DEST_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'straightMovement','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'destinationUseRotation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'restoreSpeedOnArrival','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(5,'com.anylogic.libraries.processmodeling.PMLSettings')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(16,5,'?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(6,'com.anylogic.libraries.processmodeling.Enter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(19,6,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(7,'com.anylogic.libraries.processmodeling.SelectOutput')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(30,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(8,'com.anylogic.libraries.processmodeling.ResourceTaskEnd')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(36,8,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(52,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(60,6,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(64,4,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(71,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(77,8,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(93,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=16
INSERT INTO AGENTS_RAW_LOG VALUES(16,5,'root.?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'offsetForAttachedUnits','10.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'animationLocationInitialCapacity','100')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'enableStatsByDefault','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=19
INSERT INTO AGENTS_RAW_LOG VALUES(19,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=23
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=30
INSERT INTO AGENTS_RAW_LOG VALUES(30,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(30,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=36
INSERT INTO AGENTS_RAW_LOG VALUES(36,8,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=52
INSERT INTO AGENTS_RAW_LOG VALUES(52,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(52,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=60
INSERT INTO AGENTS_RAW_LOG VALUES(60,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=64
INSERT INTO AGENTS_RAW_LOG VALUES(64,4,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=71
INSERT INTO AGENTS_RAW_LOG VALUES(71,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(71,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=77
INSERT INTO AGENTS_RAW_LOG VALUES(77,8,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=93
INSERT INTO AGENTS_RAW_LOG VALUES(93,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(93,'conditionIsProbabilistic','false')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,3,'update')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:00.100000')
COMMIT
DISCONNECT
/*C8*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'carsimb.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'com.anylogic.libraries.processmodeling.Source')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<Source>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'com.anylogic.libraries.processmodeling.Sink')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'?<Sink>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'carsimb.CarAgent')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'?<CarAgent>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(4,'com.anylogic.libraries.processmodeling.MoveTo')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(9,4,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.sourceCarl','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalType','MANUAL')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalMode','AFTER_TIMEOUT')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rateSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'modifyRate','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'setAgentParametersFromDB','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'databaseTable','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'multipleEntitiesPerArrival','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'limitArrivals','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'maxArrivals','1000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationType','LOCATION_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'enableCustomStartTime','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'startTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'pushProtocol','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'discardHangingEntities','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=6
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'root.exitCarl','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=8
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'root.carCarl','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=9
INSERT INTO AGENTS_RAW_LOG VALUES(9,4,'root.moveTo','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'destinationType','DEST_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'straightMovement','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'destinationUseRotation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'restoreSpeedOnArrival','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(5,'com.anylogic.libraries.processmodeling.PMLSettings')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(16,5,'?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(6,'com.anylogic.libraries.processmodeling.Enter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(19,6,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(7,'com.anylogic.libraries.processmodeling.SelectOutput')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(30,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(8,'com.anylogic.libraries.processmodeling.ResourceTaskEnd')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(36,8,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(52,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(60,6,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(64,4,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(71,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(77,8,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(93,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=16
INSERT INTO AGENTS_RAW_LOG VALUES(16,5,'root.?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'offsetForAttachedUnits','10.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'animationLocationInitialCapacity','100')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'enableStatsByDefault','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=19
INSERT INTO AGENTS_RAW_LOG VALUES(19,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=23
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=30
INSERT INTO AGENTS_RAW_LOG VALUES(30,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(30,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=36
INSERT INTO AGENTS_RAW_LOG VALUES(36,8,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=52
INSERT INTO AGENTS_RAW_LOG VALUES(52,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(52,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=60
INSERT INTO AGENTS_RAW_LOG VALUES(60,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=64
INSERT INTO AGENTS_RAW_LOG VALUES(64,4,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=71
INSERT INTO AGENTS_RAW_LOG VALUES(71,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(71,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=77
INSERT INTO AGENTS_RAW_LOG VALUES(77,8,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=93
INSERT INTO AGENTS_RAW_LOG VALUES(93,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(93,'conditionIsProbabilistic','false')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,3,'update')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:01.571000')
COMMIT
DISCONNECT
/*C9*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'carsimb.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'com.anylogic.libraries.processmodeling.Source')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<Source>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'com.anylogic.libraries.processmodeling.Sink')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'?<Sink>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'carsimb.CarAgent')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'?<CarAgent>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(4,'com.anylogic.libraries.processmodeling.MoveTo')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(9,4,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.sourceCarl','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalType','MANUAL')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalMode','AFTER_TIMEOUT')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rateSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'modifyRate','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'setAgentParametersFromDB','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'databaseTable','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'multipleEntitiesPerArrival','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'limitArrivals','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'maxArrivals','1000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationType','LOCATION_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'enableCustomStartTime','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'startTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'pushProtocol','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'discardHangingEntities','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=6
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'root.exitCarl','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=8
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'root.carCarl','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=9
INSERT INTO AGENTS_RAW_LOG VALUES(9,4,'root.moveTo','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'destinationType','DEST_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'straightMovement','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'destinationUseRotation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(9,'restoreSpeedOnArrival','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(5,'com.anylogic.libraries.processmodeling.PMLSettings')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(16,5,'?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(6,'com.anylogic.libraries.processmodeling.Enter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(19,6,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(7,'com.anylogic.libraries.processmodeling.SelectOutput')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(30,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(8,'com.anylogic.libraries.processmodeling.ResourceTaskEnd')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(36,8,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(52,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(60,6,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(64,4,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(71,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(77,8,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(93,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=16
INSERT INTO AGENTS_RAW_LOG VALUES(16,5,'root.?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'offsetForAttachedUnits','10.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'animationLocationInitialCapacity','100')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'enableStatsByDefault','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=19
INSERT INTO AGENTS_RAW_LOG VALUES(19,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=23
INSERT INTO AGENTS_RAW_LOG VALUES(23,4,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=30
INSERT INTO AGENTS_RAW_LOG VALUES(30,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(30,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=36
INSERT INTO AGENTS_RAW_LOG VALUES(36,8,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=52
INSERT INTO AGENTS_RAW_LOG VALUES(52,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(52,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=60
INSERT INTO AGENTS_RAW_LOG VALUES(60,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=64
INSERT INTO AGENTS_RAW_LOG VALUES(64,4,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=71
INSERT INTO AGENTS_RAW_LOG VALUES(71,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(71,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=77
INSERT INTO AGENTS_RAW_LOG VALUES(77,8,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=93
INSERT INTO AGENTS_RAW_LOG VALUES(93,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(93,'conditionIsProbabilistic','false')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,3,'update')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:01.571000')
COMMIT
DISCONNECT
/*C10*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'carsimb.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'com.anylogic.libraries.processmodeling.Source')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<Source>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'com.anylogic.libraries.processmodeling.Sink')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'?<Sink>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'com.anylogic.libraries.processmodeling.MoveTo')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.sourceCarl','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalType','MANUAL')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalMode','AFTER_TIMEOUT')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rateSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'modifyRate','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'setAgentParametersFromDB','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'databaseTable','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'multipleEntitiesPerArrival','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'limitArrivals','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'maxArrivals','1000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationType','LOCATION_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'enableCustomStartTime','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'startTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'pushProtocol','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'discardHangingEntities','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=6
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'root.exitCarl','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=8
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'root.moveTo','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'destinationType','DEST_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'straightMovement','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'destinationUseRotation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'restoreSpeedOnArrival','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(4,'com.anylogic.libraries.processmodeling.PMLSettings')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(15,4,'?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(5,'com.anylogic.libraries.processmodeling.Enter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(18,5,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(22,3,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(6,'com.anylogic.libraries.processmodeling.SelectOutput')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(29,6,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(7,'com.anylogic.libraries.processmodeling.ResourceTaskEnd')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(35,7,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(51,6,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(59,5,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(63,3,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(70,6,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(76,7,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(92,6,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=15
INSERT INTO AGENTS_RAW_LOG VALUES(15,4,'root.?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(15,'offsetForAttachedUnits','10.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(15,'animationLocationInitialCapacity','100')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(15,'enableStatsByDefault','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=18
INSERT INTO AGENTS_RAW_LOG VALUES(18,5,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(18,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(18,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(18,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(18,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=22
INSERT INTO AGENTS_RAW_LOG VALUES(22,3,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=29
INSERT INTO AGENTS_RAW_LOG VALUES(29,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(29,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=35
INSERT INTO AGENTS_RAW_LOG VALUES(35,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=51
INSERT INTO AGENTS_RAW_LOG VALUES(51,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(51,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=59
INSERT INTO AGENTS_RAW_LOG VALUES(59,5,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(59,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(59,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(59,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(59,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=63
INSERT INTO AGENTS_RAW_LOG VALUES(63,3,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=70
INSERT INTO AGENTS_RAW_LOG VALUES(70,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(70,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=76
INSERT INTO AGENTS_RAW_LOG VALUES(76,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=92
INSERT INTO AGENTS_RAW_LOG VALUES(92,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(92,'conditionIsProbabilistic','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(8,'carsimb.CarAgent')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(99,8,'<population>[0]','2022-04-27 00:00:14.950000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=99
INSERT INTO AGENTS_RAW_LOG VALUES(99,8,'root.<population>[0]','2022-04-27 00:00:14.950000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(0,99,1,'2022-04-27 00:00:15.000000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(1,99,8,'2022-04-27 00:00:15.000000')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,8,'update')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:15.313000')
COMMIT
DISCONNECT
/*C11*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'carsimb.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'com.anylogic.libraries.processmodeling.Source')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<Source>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'com.anylogic.libraries.processmodeling.Sink')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'?<Sink>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'com.anylogic.libraries.processmodeling.MoveTo')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.sourceCarl','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalType','MANUAL')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalMode','AFTER_TIMEOUT')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rateSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'modifyRate','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'setAgentParametersFromDB','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'databaseTable','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'multipleEntitiesPerArrival','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'limitArrivals','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'maxArrivals','1000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationType','LOCATION_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'enableCustomStartTime','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'startTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'pushProtocol','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'discardHangingEntities','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=6
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'root.exitCarl','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=8
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'root.moveTo','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'destinationType','DEST_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'straightMovement','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'destinationUseRotation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'restoreSpeedOnArrival','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(4,'com.anylogic.libraries.processmodeling.PMLSettings')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(15,4,'?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(5,'com.anylogic.libraries.processmodeling.Enter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(18,5,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(22,3,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(6,'com.anylogic.libraries.processmodeling.SelectOutput')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(29,6,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(7,'com.anylogic.libraries.processmodeling.ResourceTaskEnd')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(35,7,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(51,6,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(59,5,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(63,3,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(70,6,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(76,7,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(92,6,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=15
INSERT INTO AGENTS_RAW_LOG VALUES(15,4,'root.?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(15,'offsetForAttachedUnits','10.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(15,'animationLocationInitialCapacity','100')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(15,'enableStatsByDefault','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=18
INSERT INTO AGENTS_RAW_LOG VALUES(18,5,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(18,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(18,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(18,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(18,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=22
INSERT INTO AGENTS_RAW_LOG VALUES(22,3,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=29
INSERT INTO AGENTS_RAW_LOG VALUES(29,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(29,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=35
INSERT INTO AGENTS_RAW_LOG VALUES(35,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=51
INSERT INTO AGENTS_RAW_LOG VALUES(51,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(51,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=59
INSERT INTO AGENTS_RAW_LOG VALUES(59,5,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(59,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(59,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(59,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(59,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=63
INSERT INTO AGENTS_RAW_LOG VALUES(63,3,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=70
INSERT INTO AGENTS_RAW_LOG VALUES(70,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(70,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=76
INSERT INTO AGENTS_RAW_LOG VALUES(76,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=92
INSERT INTO AGENTS_RAW_LOG VALUES(92,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(92,'conditionIsProbabilistic','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(8,'carsimb.CarAgent')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(99,8,'<population>[0]','2022-04-27 00:00:09.850000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=99
INSERT INTO AGENTS_RAW_LOG VALUES(99,8,'root.<population>[0]','2022-04-27 00:00:09.850000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(0,99,1,'2022-04-27 00:00:09.850000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(1,99,8,'2022-04-27 00:00:09.850000')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,8,'update')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:10.163000')
COMMIT
DISCONNECT
/*C12*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'carsimb.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'com.anylogic.libraries.processmodeling.Source')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<Source>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'com.anylogic.libraries.processmodeling.Sink')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'?<Sink>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'com.anylogic.libraries.processmodeling.MoveTo')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.sourceCarl','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalType','MANUAL')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalMode','AFTER_TIMEOUT')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rateSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'modifyRate','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'setAgentParametersFromDB','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'databaseTable','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'multipleEntitiesPerArrival','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'limitArrivals','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'maxArrivals','1000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationType','LOCATION_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'enableCustomStartTime','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'startTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'pushProtocol','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'discardHangingEntities','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=6
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'root.exitCarl','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=8
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'root.moveTo','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'destinationType','DEST_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'straightMovement','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'destinationUseRotation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'restoreSpeedOnArrival','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(4,'com.anylogic.libraries.processmodeling.PMLSettings')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(15,4,'?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(5,'com.anylogic.libraries.processmodeling.Enter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(18,5,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(22,3,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(6,'com.anylogic.libraries.processmodeling.SelectOutput')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(29,6,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(7,'com.anylogic.libraries.processmodeling.ResourceTaskEnd')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(35,7,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(51,6,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(59,5,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(63,3,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(70,6,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(76,7,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(92,6,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=15
INSERT INTO AGENTS_RAW_LOG VALUES(15,4,'root.?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(15,'offsetForAttachedUnits','10.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(15,'animationLocationInitialCapacity','100')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(15,'enableStatsByDefault','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=18
INSERT INTO AGENTS_RAW_LOG VALUES(18,5,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(18,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(18,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(18,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(18,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=22
INSERT INTO AGENTS_RAW_LOG VALUES(22,3,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=29
INSERT INTO AGENTS_RAW_LOG VALUES(29,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(29,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=35
INSERT INTO AGENTS_RAW_LOG VALUES(35,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=51
INSERT INTO AGENTS_RAW_LOG VALUES(51,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(51,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=59
INSERT INTO AGENTS_RAW_LOG VALUES(59,5,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(59,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(59,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(59,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(59,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=63
INSERT INTO AGENTS_RAW_LOG VALUES(63,3,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=70
INSERT INTO AGENTS_RAW_LOG VALUES(70,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(70,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=76
INSERT INTO AGENTS_RAW_LOG VALUES(76,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=92
INSERT INTO AGENTS_RAW_LOG VALUES(92,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(92,'conditionIsProbabilistic','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(8,'carsimb.CarAgent')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(99,8,'<population>[0]','2022-04-27 00:00:05.599000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=99
INSERT INTO AGENTS_RAW_LOG VALUES(99,8,'root.<population>[0]','2022-04-27 00:00:05.599000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(0,99,1,'2022-04-27 00:00:05.599000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(1,99,8,'2022-04-27 00:00:05.599000')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,8,'update')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:05.913000')
COMMIT
DISCONNECT
/*C13*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'carsimb.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'com.anylogic.libraries.processmodeling.Source')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<Source>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'com.anylogic.libraries.processmodeling.Sink')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'?<Sink>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'com.anylogic.libraries.processmodeling.MoveTo')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(4,'carsimb.CarAgent')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(15,4,'?<CarAgent>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.sourceCarl','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalType','MANUAL')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalMode','AFTER_TIMEOUT')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rateSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'modifyRate','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'setAgentParametersFromDB','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'databaseTable','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'multipleEntitiesPerArrival','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'limitArrivals','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'maxArrivals','1000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationType','LOCATION_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'enableCustomStartTime','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'startTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'pushProtocol','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'discardHangingEntities','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=6
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'root.exitCarl','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=8
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'root.moveTo','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'destinationType','DEST_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'straightMovement','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'destinationUseRotation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=15
INSERT INTO AGENTS_RAW_LOG VALUES(15,4,'root.carAgent','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(5,'com.anylogic.libraries.processmodeling.PMLSettings')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(16,5,'?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(6,'com.anylogic.libraries.processmodeling.Enter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(19,6,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(23,3,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(7,'com.anylogic.libraries.processmodeling.SelectOutput')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(30,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(8,'com.anylogic.libraries.processmodeling.ResourceTaskEnd')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(36,8,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(52,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(60,6,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(64,3,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(71,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(77,8,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(93,7,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=16
INSERT INTO AGENTS_RAW_LOG VALUES(16,5,'root.?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'offsetForAttachedUnits','10.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'animationLocationInitialCapacity','100')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(16,'enableStatsByDefault','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=19
INSERT INTO AGENTS_RAW_LOG VALUES(19,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(19,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=23
INSERT INTO AGENTS_RAW_LOG VALUES(23,3,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(23,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=30
INSERT INTO AGENTS_RAW_LOG VALUES(30,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(30,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=36
INSERT INTO AGENTS_RAW_LOG VALUES(36,8,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=52
INSERT INTO AGENTS_RAW_LOG VALUES(52,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(52,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=60
INSERT INTO AGENTS_RAW_LOG VALUES(60,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(60,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=64
INSERT INTO AGENTS_RAW_LOG VALUES(64,3,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(64,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=71
INSERT INTO AGENTS_RAW_LOG VALUES(71,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(71,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=77
INSERT INTO AGENTS_RAW_LOG VALUES(77,8,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=93
INSERT INTO AGENTS_RAW_LOG VALUES(93,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(93,'conditionIsProbabilistic','false')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,4,'update')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:01.571000')
COMMIT
DISCONNECT
/*C14*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'carsimb.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'com.anylogic.libraries.processmodeling.Source')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<Source>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'com.anylogic.libraries.processmodeling.Sink')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'?<Sink>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'com.anylogic.libraries.processmodeling.MoveTo')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.sourceCarl','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalType','MANUAL')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalMode','AFTER_TIMEOUT')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rateSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'modifyRate','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'setAgentParametersFromDB','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'databaseTable','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'multipleEntitiesPerArrival','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'limitArrivals','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'maxArrivals','1000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationType','LOCATION_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'enableCustomStartTime','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'startTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'pushProtocol','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'discardHangingEntities','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=6
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'root.exitCarl','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=8
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'root.moveTo','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'destinationType','DEST_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'straightMovement','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'destinationUseRotation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'restoreSpeedOnArrival','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(4,'com.anylogic.libraries.processmodeling.PMLSettings')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(15,4,'?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(5,'com.anylogic.libraries.processmodeling.Enter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(18,5,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(22,3,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(6,'com.anylogic.libraries.processmodeling.SelectOutput')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(29,6,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(7,'com.anylogic.libraries.processmodeling.ResourceTaskEnd')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(35,7,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(51,6,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(59,5,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(63,3,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(70,6,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(76,7,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(92,6,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=15
INSERT INTO AGENTS_RAW_LOG VALUES(15,4,'root.?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(15,'offsetForAttachedUnits','10.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(15,'animationLocationInitialCapacity','100')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(15,'enableStatsByDefault','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=18
INSERT INTO AGENTS_RAW_LOG VALUES(18,5,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(18,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(18,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(18,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(18,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=22
INSERT INTO AGENTS_RAW_LOG VALUES(22,3,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=29
INSERT INTO AGENTS_RAW_LOG VALUES(29,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(29,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=35
INSERT INTO AGENTS_RAW_LOG VALUES(35,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=51
INSERT INTO AGENTS_RAW_LOG VALUES(51,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(51,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=59
INSERT INTO AGENTS_RAW_LOG VALUES(59,5,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(59,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(59,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(59,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(59,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=63
INSERT INTO AGENTS_RAW_LOG VALUES(63,3,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=70
INSERT INTO AGENTS_RAW_LOG VALUES(70,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(70,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=76
INSERT INTO AGENTS_RAW_LOG VALUES(76,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=92
INSERT INTO AGENTS_RAW_LOG VALUES(92,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(92,'conditionIsProbabilistic','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(8,'carsimb.CarAgent')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(99,8,'<population>[0]','2022-04-27 00:00:05.549000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=99
INSERT INTO AGENTS_RAW_LOG VALUES(99,8,'root.<population>[0]','2022-04-27 00:00:05.549000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(0,99,1,'2022-04-27 00:00:05.599000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(99,1,'WAIT','2022-04-27 00:00:05.549000','2022-04-27 00:00:05.599000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(1,99,8,'2022-04-27 00:00:05.599000')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,8,'update')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:05.863000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:06.754000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:08.326000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:09.426000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:09.459000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:14.556000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:14.593000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:14.655000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:14.709000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:14.774000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:15.697000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:16.754000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:17.978000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:18.659000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:20.813000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:21.074000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:21.489000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:23.343000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:24.315000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:26.283000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:26.647000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:26.863000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:32.157000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:32.804000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:33.100000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:35.052000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:35.782000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:36.390000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:36.940000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:38.525000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:38.998000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:40.687000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:45.226000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:47.052000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:48.777000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:49.393000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:49.419000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:50.824000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:51.754000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:53.279000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:54.119000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:55.575000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:55.691000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:58.953000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:59.476000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:59.899000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:02.021000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:02.448000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:02.464000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:04.040000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:05.022000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:05.791000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:06.889000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:07.703000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:08.387000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:08.388000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:08.850000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:08.945000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:09.623000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:10.333000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:11.180000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:12.357000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:12.689000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:12.728000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:14.291000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:16.047000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:16.647000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:17.235000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:17.766000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:18.003000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:18.361000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:19.948000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:21.314000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:21.566000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:23.057000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:23.074000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:23.293000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:23.472000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:25.285000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:25.735000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:30.473000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:30.933000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:32.503000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:32.631000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:32.977000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:33.301000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:33.975000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:33.988000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:35.864000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:36.206000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:36.399000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:38.490000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:38.972000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:39.703000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:42.008000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:42.490000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:46.062000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:46.587000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:49.204000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:51.807000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:52.193000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:53.465000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:53.970000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:54.133000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:55.172000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:55.685000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:56.915000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:57.047000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:57.343000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:58.202000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:59.181000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:00.486000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:00.801000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:00.921000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:04.051000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:04.833000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:04.981000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:05.084000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:07.857000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:08.126000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:08.975000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:08.976000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:11.759000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:12.292000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:12.859000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:13.272000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:13.369000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:14.769000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:16.162000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:16.509000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:17.594000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:18.093000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:19.247000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:22.957000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:23.753000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:24.750000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:25.518000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(99,8,'MOVE','2022-04-27 00:00:05.599000','2022-04-27 00:02:26.418000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(2,99,NULL,'2022-04-27 00:02:26.418000')
COMMIT
INSERT INTO AGENT_MOVEMENT_RAW_LOG VALUES(99,25.0E0,'2022-04-27 00:00:05.599000','2022-04-27 00:02:26.418000')
COMMIT
DISCONNECT
/*C15*/SET SCHEMA PUBLIC
DROP VIEW trace_log IF EXISTS CASCADE
DROP VIEW histograms_log IF EXISTS CASCADE
DROP VIEW datasets_log IF EXISTS CASCADE
DROP VIEW statistics_log IF EXISTS CASCADE
DROP VIEW agent_type_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_stats_log IF EXISTS CASCADE
DROP VIEW agent_statechart_states_log IF EXISTS CASCADE
DROP VIEW statechart_transitions_log IF EXISTS CASCADE
DROP VIEW fluid_utilization_log IF EXISTS CASCADE
DROP VIEW fluid_rates_log IF EXISTS CASCADE
DROP VIEW fluid_storages_log IF EXISTS CASCADE
DROP VIEW fluid_units_log IF EXISTS CASCADE
DROP VIEW resource_unit_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_utilization_log IF EXISTS CASCADE
DROP VIEW resource_pool_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_task_stats_log IF EXISTS CASCADE
DROP VIEW resource_unit_states_log IF EXISTS CASCADE
DROP VIEW flowchart_stats_time_in_state_log IF EXISTS CASCADE
DROP VIEW flowchart_process_states_log IF EXISTS CASCADE
DROP VIEW flowchart_entries_log IF EXISTS CASCADE
DROP VIEW events_log IF EXISTS CASCADE
DROP VIEW agent_messages_log IF EXISTS CASCADE
DROP VIEW agent_movement_stats_log IF EXISTS CASCADE
DROP VIEW agent_movement_log IF EXISTS CASCADE
DROP VIEW library_block_parameters_log IF EXISTS CASCADE
DROP VIEW agent_parameters_log IF EXISTS CASCADE
DROP VIEW library_blocks_log IF EXISTS CASCADE
DROP VIEW agents_log IF EXISTS CASCADE
DROP TABLE fluid_utilization_raw_log IF EXISTS CASCADE
DROP TABLE fluid_rates_raw_log IF EXISTS CASCADE
DROP TABLE fluid_storages_raw_log IF EXISTS CASCADE
DROP TABLE fluid_units_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_pool_utilization_raw_log IF EXISTS CASCADE
DROP TABLE resource_unit_states_raw_log IF EXISTS CASCADE
DROP TABLE histograms_raw_log IF EXISTS CASCADE
DROP TABLE datasets_raw_log IF EXISTS CASCADE
DROP TABLE statistics_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_process_states_raw_log IF EXISTS CASCADE
DROP TABLE flowchart_entries_raw_log IF EXISTS CASCADE
DROP TABLE agent_messages_raw_log IF EXISTS CASCADE
DROP TABLE agent_movement_raw_log IF EXISTS CASCADE
DROP TABLE events_raw_log IF EXISTS CASCADE
DROP TABLE statechart_transitions_raw_log IF EXISTS CASCADE
DROP TABLE statechart_states_raw_log IF EXISTS CASCADE
DROP TABLE trace_raw_log IF EXISTS CASCADE
DROP TABLE agent_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_statecharts_raw_log IF EXISTS CASCADE
DROP TABLE agent_type_elements_raw_log IF EXISTS CASCADE
DROP TABLE agent_parameters_raw_log IF EXISTS CASCADE
DROP TABLE destroyed_agents_raw_log IF EXISTS CASCADE
DROP TABLE agents_raw_log IF EXISTS CASCADE
DROP TABLE agent_types_raw_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_name_log IF EXISTS CASCADE
DROP FUNCTION al_format_agent_type_name_log IF EXISTS CASCADE
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_type_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='al_format_agent_name_log' AND TYPE='FUNCTION' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_types_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='destroyed_agents_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statecharts_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_elements_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_raw_log' AND TYPE='TABLE' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agents_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_blocks_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='library_block_parameters_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_movement_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_messages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='events_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_entries_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_process_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='flowchart_stats_time_in_state_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_task_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_pool_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='resource_unit_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_units_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_storages_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_rates_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='fluid_utilization_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statechart_transitions_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_states_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='agent_type_statechart_stats_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='statistics_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='datasets_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='histograms_log' AND TYPE='VIEW' AND USAGE='LOG'
DELETE FROM AL_DB_OBJECTS WHERE NAME='trace_log' AND TYPE='VIEW' AND USAGE='LOG'
COMMIT
CREATE FUNCTION al_format_agent_type_name_log (agentType LONGVARCHAR) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE dotIndex INT;\u000a\u0009SET dotIndex = LOCATE ('.', REVERSE (agentType));\u000a\u0009IF dotIndex = 0 THEN\u000a\u0009\u0009RETURN agentType;\u000a\u0009END IF;\u000a\u0009RETURN REVERSE (SUBSTRING (REVERSE (agentType), 0, dotIndex));\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_type_name_log','FUNCTION','LOG')
COMMIT
CREATE FUNCTION al_format_agent_name_log (name LONGVARCHAR, id INT) RETURNS LONGVARCHAR\u000aBEGIN ATOMIC\u000a\u0009DECLARE index INT;\u000a\u0009DECLARE result LONGVARCHAR;\u000a\u0009SET result = name;\u000a\u0009SET index = LOCATE ('root.', name);\u000a\u0009IF index = 1 THEN\u000a\u0009\u0009SET result = SUBSTRING (result, LENGTH('root.') + 1, LENGTH(result));\u000a\u0009END IF;\u000a\u0009SET index = LOCATE('[', result);\u0009IF index > 0 THEN\u000a\u0009\u0009SET result = CONCAT (result, ' : ', id);\u000a\u0009END IF;\u000a\u0009RETURN result;\u000aEND
INSERT INTO AL_DB_OBJECTS VALUES('al_format_agent_name_log','FUNCTION','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_types_raw_log (ID INT PRIMARY KEY, NAME VARCHAR(255))
INSERT INTO AL_DB_OBJECTS VALUES('agent_types_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agents_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), DATE TIMESTAMP, CONSTRAINT AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS destroyed_agents_raw_log (AGENT_ID INT, DATE TIMESTAMP, CONSTRAINT DESTROYED_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('destroyed_agents_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_parameters_raw_log (AGENT_ID INT, PARAMETER_NAME VARCHAR(255), PARAMETER_VALUE LONGVARCHAR, CONSTRAINT AGENT_PARAMETERS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_elements_raw_log (ID INT PRIMARY KEY, AGENT_TYPE_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_TYPE_REF FOREIGN KEY (AGENT_TYPE_ID) REFERENCES agent_types_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_type_statecharts_raw_log (STATECHART_ID INT, ELEMENT_ID INT, CONSTRAINT STATECHARTS_STATECHART_TO_ELEMENT_REF FOREIGN KEY (STATECHART_ID) REFERENCES agent_type_elements_raw_log(Id),CONSTRAINT STATECHARTS_ELEMENT_TO_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_type_elements_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statecharts_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_elements_raw_log (ID INT PRIMARY KEY, AGENT_ID INT, NAME VARCHAR(255), CONSTRAINT ELEMENT_TO_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('agent_elements_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS trace_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, DATE TIMESTAMP, MESSAGE_TEXT LONGVARCHAR, CONSTRAINT TRACE_LOG_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(Id))
INSERT INTO AL_DB_OBJECTS VALUES('trace_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_states_raw_log (AGENT_ID INT, STATE_ID INT, ENTRY_DATE TIMESTAMP, EXIT_DATE TIMESTAMP, CONSTRAINT STATECHART_STATES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT STATECHART_STATES_STATE_REF FOREIGN KEY (STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statechart_transitions_raw_log (AGENT_ID INT, TRANSITION_ID INT, FROM_STATE_ID INT, DATE TIMESTAMP, CONSTRAINT STATECHART_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT TRANSITION_REF FOREIGN KEY (TRANSITION_ID) REFERENCES agent_type_elements_raw_log(ID),CONSTRAINT FROM_STATE_REF FOREIGN KEY (FROM_STATE_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS events_raw_log (EVENT_ID INT, DATE TIMESTAMP, CONSTRAINT EVENT_REF FOREIGN KEY (EVENT_ID) REFERENCES agent_type_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('events_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_movement_raw_log (AGENT_ID INT, SPEED FLOAT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT MOVEMENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS agent_messages_raw_log (AGENT_ID INT, SENDER_ID INT, MESSAGE LONGVARCHAR, DATE TIMESTAMP, COUNTER INT GENERATED BY DEFAULT AS IDENTITY, CONSTRAINT MESSAGES_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT MESSAGES_SENDER_AGENT_REF FOREIGN KEY (SENDER_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_entries_raw_log (COUNTER INT GENERATED BY DEFAULT AS IDENTITY, AGENT_ID INT, BLOCK_ID INT, ENTRY_DATE TIMESTAMP, CONSTRAINT FLOWCHART_ENTRIES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_ENTRIES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS flowchart_process_states_raw_log (AGENT_ID INT, BLOCK_ID INT, ACTIVITY_TYPE VARCHAR(20), START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT FLOWCHART_PROCESS_STATES_ENTITY_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT FLOWCHART_PROCESS_STATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS statistics_raw_log (AGENT_ID INT, NAME VARCHAR(255), MEAN FLOAT, DEVIATION FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, MEAN_CONFIDENCE FLOAT, NUMBER INT, CONSTRAINT STATISTICS_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('statistics_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS datasets_raw_log (ELEMENT_ID INT, INDEX INT, X FLOAT, Y FLOAT, CONSTRAINT DATASETS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('datasets_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS histograms_raw_log (ELEMENT_ID INT, START FLOAT, END FLOAT, PDF FLOAT, CDF FLOAT, CONSTRAINT HISTOGRAMS_ELEMENT_REF FOREIGN KEY (ELEMENT_ID) REFERENCES agent_elements_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('histograms_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_states_raw_log (UNIT_ID INT, POOL_ID INT, USAGE_STATE VARCHAR(20), TASK_TYPE VARCHAR(20), AGENT_ID INT, TASK_ID INT, START_DATE TIMESTAMP, STOP_DATE TIMESTAMP, CONSTRAINT RESOURCE_UNIT_STATES_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_AGENT_AGENT_REF FOREIGN KEY (AGENT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_STATES_TASK_AGENT_REF FOREIGN KEY (TASK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_pool_utilization_raw_log (POOL_ID INT, UTILIZATION FLOAT, SIZE INT, CONSTRAINT RESOURCE_POOL_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS resource_unit_utilization_raw_log (UNIT_ID INT, POOL_ID INT, UTILIZATION FLOAT, CONSTRAINT RESOURCE_UNIT_UTILIZATION_UNIT_AGENT_REF FOREIGN KEY (UNIT_ID) REFERENCES agents_raw_log(ID),CONSTRAINT RESOURCE_UNIT_UTILIZATION_POOL_AGENT_REF FOREIGN KEY (POOL_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_units_raw_log (BLOCK_ID INT, AMOUNT_UNITS VARCHAR(20), RATE_UNITS VARCHAR(20), CONSTRAINT FLUID_UNITS_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_storages_raw_log (BLOCK_ID INT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_STORAGES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_rates_raw_log (BLOCK_ID INT, PORT VARCHAR(20), TOTAL FLOAT, MINIMUM FLOAT, MAXIMUM FLOAT, AVERAGE FLOAT, CONSTRAINT FLUID_RATES_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_raw_log','TABLE','LOG')
COMMIT
CREATE CACHED TABLE IF NOT EXISTS fluid_utilization_raw_log (BLOCK_ID INT, UTILIZATION FLOAT, CONSTRAINT FLUID_UTILIZATION_BLOCK_AGENT_REF FOREIGN KEY (BLOCK_ID) REFERENCES agents_raw_log(ID))
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_raw_log','TABLE','LOG')
COMMIT
CREATE VIEW agents_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('agents_log','VIEW','LOG')
COMMIT
CREATE VIEW library_blocks_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) name, agents.DATE BirthDate, destroyed_agents.DATE DeathDate FROM agent_types_raw_log agent_types INNER JOIN agents_raw_log agents ON agent_types.ID = agents.AGENT_TYPE_ID LEFT JOIN destroyed_agents_raw_log destroyed_agents ON agents.ID = destroyed_agents.AGENT_ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY type, name
INSERT INTO AL_DB_OBJECTS VALUES('library_blocks_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME NOT LIKE 'com.anylogic.libraries.%' ORDER BY agent_type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW library_block_parameters_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) block_type, al_format_agent_name_log(agents.NAME, agents.ID) block, parameters.PARAMETER_NAME parameter_name, parameters.PARAMETER_VALUE parameter_value FROM agent_parameters_raw_log parameters INNER JOIN agents_raw_log agents ON parameters.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID WHERE agent_types.NAME LIKE 'com.anylogic.libraries.%' ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('library_block_parameters_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.SPEED speed, agent_movement.START_DATE start_date, agent_movement.STOP_DATE stop_date FROM agent_movement_raw_log agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY start_date
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_movement_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_movement.total_meters total_meters, agent_movement.total_seconds total_seconds, agent_movement.avg_speed_mps avg_speed_mps FROM (   SELECT     AGENT_ID,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED) / 1000 total_meters,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE ) * SPEED)       / SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) avg_speed_mps   FROM agent_movement_raw_log   GROUP BY AGENT_ID) agent_movement INNER JOIN agents_raw_log agents ON agent_movement.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY type, agent
INSERT INTO AL_DB_OBJECTS VALUES('agent_movement_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_messages_log AS SELECT am.MESSAGE message, al_format_agent_name_log(a1.NAME, a1.ID) recipient, al_format_agent_type_name_log(at1.NAME) recipient_type, al_format_agent_name_log(a2.NAME, a2.ID) sender, al_format_agent_type_name_log(at2.NAME) sender_type, am.DATE date, am.COUNTER counter FROM agent_messages_raw_log am INNER JOIN agents_raw_log a1 ON am.AGENT_ID = a1.ID INNER JOIN agent_types_raw_log at1 ON a1.AGENT_TYPE_ID = at1.ID LEFT JOIN agents_raw_log a2 ON am.SENDER_ID = a2.ID LEFT JOIN agent_types_raw_log at2 ON a2.AGENT_TYPE_ID = at2.ID ORDER BY am.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('agent_messages_log','VIEW','LOG')
COMMIT
CREATE VIEW events_log AS SELECT agent_type_elements.NAME event_name, events.DATE date, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM events_raw_log events INNER JOIN agent_type_elements_raw_log agent_type_elements ON events.EVENT_ID = agent_type_elements.ID INNER JOIN agents_raw_log agents ON agent_type_elements.AGENT_TYPE_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agent_type_elements.AGENT_TYPE_ID = agent_types.ID ORDER BY events.DATE
INSERT INTO AL_DB_OBJECTS VALUES('events_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_entries_log AS SELECT \u0009flowchart_entries.COUNTER counter, \u0009al_format_agent_type_name_log(agent_types.NAME) agent_type, \u0009al_format_agent_name_log(agents.NAME, agents.ID) agent, \u0009al_format_agent_type_name_log(block_types.NAME) block_type, \u0009al_format_agent_name_log(blocks.NAME, blocks.ID) block, \u0009flowchart_entries.ENTRY_DATE entry_date FROM flowchart_entries_raw_log flowchart_entries INNER JOIN agents_raw_log agents ON flowchart_entries.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log blocks ON flowchart_entries.BLOCK_ID = blocks.ID LEFT JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_entries.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_entries_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_process_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.ACTIVITY_TYPE activity_type, flowchart_process_states.START_DATE start_date, flowchart_process_states.STOP_DATE stop_date FROM flowchart_process_states_raw_log flowchart_process_states INNER JOIN agents_raw_log agents ON flowchart_process_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY flowchart_process_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_process_states_log','VIEW','LOG')
COMMIT
CREATE VIEW flowchart_stats_time_in_state_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, flowchart_process_states.activity_type activity_type, flowchart_process_states.mean_seconds mean_seconds, flowchart_process_states.total_seconds total_seconds, flowchart_process_states.min_seconds min_seconds, flowchart_process_states.max_seconds max_seconds, flowchart_process_states.n_agents n_agents FROM (   SELECT     BLOCK_ID block_id,     ACTIVITY_TYPE activity_type,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT( DISTINCT AGENT_ID ) n_agents   FROM flowchart_process_states_raw_log flowchart_process_states   GROUP BY BLOCK_ID, ACTIVITY_TYPE) flowchart_process_states INNER JOIN agents_raw_log blocks ON flowchart_process_states.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block, activity_type
INSERT INTO AL_DB_OBJECTS VALUES('flowchart_stats_time_in_state_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_states_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(units.NAME, units.ID) unit, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_unit_states.USAGE_STATE usage_state, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, resource_unit_states.START_DATE start_date, resource_unit_states.STOP_DATE stop_date FROM resource_unit_states_raw_log resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log agents ON resource_unit_states.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY resource_unit_states.START_DATE
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_states_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN al_format_agent_name_log(tasks.NAME, tasks.ID) ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     UNIT_ID unit_id,     POOL_ID pool_id,     TASK_TYPE task_type,     TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', START_DATE, STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(START_DATE) n_tasks   FROM resource_unit_states_raw_log   GROUP BY UNIT_ID, POOL_ID, TASK_TYPE, TASK_ID ) resource_unit_states INNER JOIN agents_raw_log units ON resource_unit_states.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, unit, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_task_stats_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, CASE WHEN resource_unit_states.TASK_TYPE = 'TASK_CUSTOM' THEN tasks.NAME ELSE resource_unit_states.TASK_TYPE END task, resource_unit_states.mean_seconds mean_seconds, resource_unit_states.total_seconds total_seconds, resource_unit_states.n_tasks n_tasks FROM (   SELECT     u.AGENT_TYPE_ID unit_type_id,     s.POOL_ID pool_id,     s.TASK_TYPE task_type,     s.TASK_ID task_id,     AVG(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.START_DATE, s.STOP_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(s.START_DATE) n_tasks   FROM resource_unit_states_raw_log s   INNER JOIN agents_raw_log u ON s.UNIT_ID = u.ID   GROUP BY u.AGENT_TYPE_ID, s.POOL_ID, s.TASK_TYPE, s.TASK_ID ) resource_unit_states INNER JOIN agent_types_raw_log unit_types ON resource_unit_states.unit_type_id = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_states.POOL_ID = pools.ID LEFT JOIN agents_raw_log tasks ON resource_unit_states.TASK_ID = tasks.ID ORDER BY unit_type, resource_pool, resource_unit_states.TASK_TYPE, tasks.NAME
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_task_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_pool_utilization_log AS SELECT al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, resource_pool_utilization.UTILIZATION utilization, resource_pool_utilization.SIZE size FROM resource_pool_utilization_raw_log resource_pool_utilization INNER JOIN agents_raw_log pools ON resource_pool_utilization.POOL_ID = pools.ID ORDER BY resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_pool_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW resource_unit_utilization_log AS SELECT al_format_agent_type_name_log(unit_types.NAME) unit_type, al_format_agent_name_log(pools.NAME, pools.ID) resource_pool, al_format_agent_name_log(units.NAME, units.ID) unit, resource_unit_utilization.UTILIZATION utilization FROM resource_unit_utilization_raw_log resource_unit_utilization INNER JOIN agents_raw_log units ON resource_unit_utilization.UNIT_ID = units.ID INNER JOIN agent_types_raw_log unit_types ON units.AGENT_TYPE_ID = unit_types.ID INNER JOIN agents_raw_log pools ON resource_unit_utilization.POOL_ID = pools.ID ORDER BY unit_type, resource_pool
INSERT INTO AL_DB_OBJECTS VALUES('resource_unit_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_units_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, units.AMOUNT_UNITS amount_units, units.RATE_UNITS rate_units FROM fluid_units_raw_log units INNER JOIN agents_raw_log blocks ON units.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_units_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_storages_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, storages.MINIMUM minimum, storages.MAXIMUM maximum, storages.AVERAGE average FROM fluid_storages_raw_log storages INNER JOIN agents_raw_log blocks ON storages.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_storages_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_rates_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, rates.PORT port, rates.TOTAL total_amount,rates.MINIMUM minimum_rate, rates.MAXIMUM maximum_rate, rates.AVERAGE average_rate FROM fluid_rates_raw_log rates INNER JOIN agents_raw_log blocks ON rates.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_rates_log','VIEW','LOG')
COMMIT
CREATE VIEW fluid_utilization_log AS SELECT al_format_agent_type_name_log(block_types.NAME) block_type, al_format_agent_name_log(blocks.NAME, blocks.ID) block, utilization.UTILIZATION utilization FROM fluid_utilization_raw_log utilization INNER JOIN agents_raw_log blocks ON utilization.BLOCK_ID = blocks.ID INNER JOIN agent_types_raw_log block_types ON blocks.AGENT_TYPE_ID = block_types.ID ORDER BY block_type, block
INSERT INTO AL_DB_OBJECTS VALUES('fluid_utilization_log','VIEW','LOG')
COMMIT
CREATE VIEW statechart_transitions_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, transitions.NAME transition, states.NAME from_state, statechart_transitions.DATE date FROM statechart_transitions_raw_log statechart_transitions INNER JOIN agents_raw_log agents ON statechart_transitions.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID LEFT JOIN agent_type_elements_raw_log transitions ON statechart_transitions.TRANSITION_ID = transitions.ID INNER JOIN agent_type_elements_raw_log states ON statechart_transitions.FROM_STATE_ID = states.ID ORDER BY statechart_transitions.DATE
INSERT INTO AL_DB_OBJECTS VALUES('statechart_transitions_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_states_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.ENTRY_DATE entry_date, statechart_states.EXIT_DATE exit_date FROM statechart_states_raw_log statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, statechart_states.ENTRY_DATE
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_states_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.n_entries n_entries FROM (   SELECT     AGENT_ID agent_id,     STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', ENTRY_DATE, EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     COUNT(ENTRY_DATE) n_entries   FROM statechart_states_raw_log   GROUP BY AGENT_ID, STATE_ID ) statechart_states INNER JOIN agents_raw_log agents ON statechart_states.AGENT_ID = agents.ID INNER JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, agent, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW agent_type_statechart_stats_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, elements_statecharts.NAME statechart, elements_states.NAME state, statechart_states.mean_seconds mean_seconds, statechart_states.total_seconds total_seconds, statechart_states.min_seconds min_seconds, statechart_states.max_seconds max_seconds, statechart_states.n_entries n_entries FROM (   SELECT     a.AGENT_TYPE_ID agent_type_id,     s.STATE_ID state_id,     AVG(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 mean_seconds,     SUM(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 total_seconds,     MIN(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 min_seconds,     MAX(CAST( DATEDIFF('millisecond', s.ENTRY_DATE, s.EXIT_DATE) AS DOUBLE )) / 1000 max_seconds,     COUNT(s.ENTRY_DATE) n_entries   FROM statechart_states_raw_log s   INNER JOIN agents_raw_log a ON s.AGENT_ID = a.ID   GROUP BY a.AGENT_TYPE_ID, s.STATE_ID ) statechart_states INNER JOIN agent_types_raw_log agent_types ON statechart_states.agent_type_id = agent_types.ID INNER JOIN agent_type_statecharts_raw_log agent_type_statecharts ON agent_type_statecharts.ELEMENT_ID = statechart_states.STATE_ID INNER JOIN agent_type_elements_raw_log elements_statecharts ON agent_type_statecharts.STATECHART_ID = elements_statecharts.ID INNER JOIN agent_type_elements_raw_log elements_states ON statechart_states.STATE_ID = elements_states.ID ORDER BY agent_type, statechart, state
INSERT INTO AL_DB_OBJECTS VALUES('agent_type_statechart_stats_log','VIEW','LOG')
COMMIT
CREATE VIEW statistics_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, statistics.NAME name, statistics.MEAN mean, statistics.DEVIATION deviation, statistics.MINIMUM minimum, statistics.MAXIMUM maximum, statistics.MEAN_CONFIDENCE mean_confidence, statistics.NUMBER number FROM statistics_raw_log statistics LEFT JOIN agents_raw_log agents ON statistics.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, statistics.NAME
INSERT INTO AL_DB_OBJECTS VALUES('statistics_log','VIEW','LOG')
COMMIT
CREATE VIEW datasets_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, datasets.INDEX index, datasets.X x, datasets.Y y FROM datasets_raw_log datasets LEFT JOIN agent_elements_raw_log agent_elements ON datasets.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, datasets.INDEX
INSERT INTO AL_DB_OBJECTS VALUES('datasets_log','VIEW','LOG')
COMMIT
CREATE VIEW histograms_log AS SELECT al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent, agent_elements.NAME name, histograms.START start, histograms.END end, histograms.PDF pdf, histograms.CDF cdf FROM histograms_raw_log histograms LEFT JOIN agent_elements_raw_log agent_elements ON histograms.ELEMENT_ID = agent_elements.ID LEFT JOIN agents_raw_log agents ON agent_elements.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY agent_type, agent, agent_elements.NAME, histograms.START
INSERT INTO AL_DB_OBJECTS VALUES('histograms_log','VIEW','LOG')
COMMIT
CREATE VIEW trace_log AS SELECT trace.MESSAGE_TEXT message_text, trace.DATE date, trace.COUNTER counter, al_format_agent_type_name_log(agent_types.NAME) agent_type, al_format_agent_name_log(agents.NAME, agents.ID) agent FROM trace_raw_log trace LEFT JOIN agents_raw_log agents ON trace.AGENT_ID = agents.ID LEFT JOIN agent_types_raw_log agent_types ON agents.AGENT_TYPE_ID = agent_types.ID ORDER BY trace.COUNTER
INSERT INTO AL_DB_OBJECTS VALUES('trace_log','VIEW','LOG')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(0,'carsimb.Main')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(1,'com.anylogic.libraries.processmodeling.Source')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'?<Source>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(2,'com.anylogic.libraries.processmodeling.Sink')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'?<Sink>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(3,'com.anylogic.libraries.processmodeling.MoveTo')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=0
INSERT INTO AGENTS_RAW_LOG VALUES(0,0,'root','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=1
INSERT INTO AGENTS_RAW_LOG VALUES(1,1,'root.sourceCarl','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalType','MANUAL')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rate','1.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalMode','AFTER_TIMEOUT')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'firstArrivalTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'rateSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'modifyRate','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'arrivalSchedule','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'setAgentParametersFromDB','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'databaseTable','null')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'multipleEntitiesPerArrival','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'limitArrivals','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'maxArrivals','1000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationType','LOCATION_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'enableCustomStartTime','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'startTime','0.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'pushProtocol','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(1,'discardHangingEntities','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=6
INSERT INTO AGENTS_RAW_LOG VALUES(6,2,'root.exitCarl','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=8
INSERT INTO AGENTS_RAW_LOG VALUES(8,3,'root.moveTo','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'destinationType','DEST_NODE')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'straightMovement','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'destinationUseRotation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(8,'restoreSpeedOnArrival','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(4,'com.anylogic.libraries.processmodeling.PMLSettings')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(15,4,'?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(5,'com.anylogic.libraries.processmodeling.Enter')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(18,5,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(22,3,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(6,'com.anylogic.libraries.processmodeling.SelectOutput')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(29,6,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(7,'com.anylogic.libraries.processmodeling.ResourceTaskEnd')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(35,7,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(51,6,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(59,5,'?<Enter>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(63,3,'?<MoveTo>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(70,6,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(76,7,'?<ResourceTaskEnd>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(92,6,'?<SelectOutput>','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=15
INSERT INTO AGENTS_RAW_LOG VALUES(15,4,'root.?<PMLSettings>','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(15,'offsetForAttachedUnits','10.0')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(15,'animationLocationInitialCapacity','100')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(15,'enableStatsByDefault','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=18
INSERT INTO AGENTS_RAW_LOG VALUES(18,5,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(18,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(18,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(18,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(18,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=22
INSERT INTO AGENTS_RAW_LOG VALUES(22,3,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(22,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=29
INSERT INTO AGENTS_RAW_LOG VALUES(29,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(29,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=35
INSERT INTO AGENTS_RAW_LOG VALUES(35,7,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=51
INSERT INTO AGENTS_RAW_LOG VALUES(51,6,'root.?<PMLSettings>.releaseForCanceledUnitsReturningHome.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(51,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=59
INSERT INTO AGENTS_RAW_LOG VALUES(59,5,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitWrapUpEnter','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(59,'locationType','LOCATION_NOT_SPECIFIED')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(59,'locationXYZInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(59,'addToCustomPopulation','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(59,'pushProtocol','true')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=63
INSERT INTO AGENTS_RAW_LOG VALUES(63,3,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.moveToHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'mode','MODE_MOVE_TO')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'destinationType','DEST_NODE_XYZ')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'destinationInNetwork','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'useOffsets','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'straightMovement','false')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'destinationUseRotation','true')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(63,'restoreSpeedOnArrival','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=70
INSERT INTO AGENTS_RAW_LOG VALUES(70,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.goHome','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(70,'conditionIsProbabilistic','false')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=76
INSERT INTO AGENTS_RAW_LOG VALUES(76,7,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.resourceEnd','2022-04-27 00:00:00.000000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=92
INSERT INTO AGENTS_RAW_LOG VALUES(92,6,'root.?<PMLSettings>.releaseForCanceledUnitsStayingWhereTheyAre.unitOut','2022-04-27 00:00:00.000000')
COMMIT
INSERT INTO AGENT_PARAMETERS_RAW_LOG VALUES(92,'conditionIsProbabilistic','false')
COMMIT
INSERT INTO AGENT_TYPES_RAW_LOG VALUES(8,'carsimb.CarAgent')
COMMIT
INSERT INTO AGENTS_RAW_LOG VALUES(99,8,'<population>[0]','2022-04-27 00:00:04.349000')
COMMIT
DELETE FROM AGENTS_RAW_LOG WHERE ID=99
INSERT INTO AGENTS_RAW_LOG VALUES(99,8,'root.<population>[0]','2022-04-27 00:00:04.349000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(0,99,1,'2022-04-27 00:00:04.349000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(1,99,8,'2022-04-27 00:00:04.349000')
COMMIT
INSERT INTO AGENT_TYPE_ELEMENTS_RAW_LOG VALUES(0,8,'update')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:04.663000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:05.554000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:07.126000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:08.226000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:08.259000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:13.356000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:13.393000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:13.455000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:13.509000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:13.574000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:14.497000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:15.554000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:16.778000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:17.459000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:19.613000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:19.874000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:20.289000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:22.143000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:23.115000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:25.083000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:25.447000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:25.663000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:30.957000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:31.604000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:31.900000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:33.852000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:34.582000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:35.190000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:35.740000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:37.325000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:37.798000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:39.487000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:44.026000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:45.852000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:47.577000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:48.193000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:48.219000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:49.624000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:50.554000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:52.079000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:52.919000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:54.375000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:54.491000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:57.753000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:58.276000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:00:58.699000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:00.821000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:01.248000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:01.264000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:02.840000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:03.822000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:04.591000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:05.689000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:06.503000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:07.187000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:07.188000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:07.650000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:07.745000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:08.423000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:09.133000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:09.980000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:11.157000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:11.489000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:11.528000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:13.091000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:14.847000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:15.447000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:16.035000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:16.566000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:16.803000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:17.161000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:18.748000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:20.114000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:20.366000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:21.857000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:21.874000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:22.093000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:22.272000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:24.085000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:24.535000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:29.273000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:29.733000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:31.303000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:31.431000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:31.777000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:32.101000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:32.775000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:32.788000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:34.664000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:35.006000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:35.199000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:37.290000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:37.772000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:38.503000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:40.808000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:41.290000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:44.862000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:45.387000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:48.004000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:50.607000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:50.993000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:52.265000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:52.770000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:52.933000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:53.972000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:54.485000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:55.715000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:55.847000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:56.143000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:57.002000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:57.981000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:59.286000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:59.601000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:01:59.721000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:02.851000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:03.633000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:03.781000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:03.884000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:06.657000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:06.926000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:07.775000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:07.776000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:10.559000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:11.092000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:11.659000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:12.072000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:12.169000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:13.569000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:14.962000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:15.309000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:16.394000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:16.893000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:18.047000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:21.757000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:22.553000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:23.550000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:24.318000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:26.048000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:26.440000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:26.774000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:27.071000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:27.144000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:27.672000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:28.112000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:30.315000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:30.571000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:31.753000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:31.880000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:32.342000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:32.415000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:34.042000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:34.323000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:36.171000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:39.336000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:40.308000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:40.548000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:40.886000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:43.091000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:43.363000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:46.867000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:48.017000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:48.422000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:49.274000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:50.189000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:50.485000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:51.492000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:51.762000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:52.893000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:53.561000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:54.298000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:56.329000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:02:59.777000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:00.588000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:00.957000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:01.287000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:01.538000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:02.782000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:03.029000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:03.063000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:03.067000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:04.498000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:05.307000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:07.345000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:08.796000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:09.217000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:09.776000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:10.363000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:11.748000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:11.831000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:12.154000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:12.406000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:13.824000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:15.563000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:16.373000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:16.560000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:17.068000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:17.517000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:18.710000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:21.437000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:21.501000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:22.824000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:24.297000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:25.488000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:26.477000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:26.631000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:26.845000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:27.790000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:29.117000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:32.548000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:32.949000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:35.547000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:36.043000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:37.765000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:41.284000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:41.629000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:42.910000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:45.066000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:45.436000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:46.488000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:47.966000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:49.752000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:50.272000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:50.483000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:51.147000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:52.199000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:55.135000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:55.636000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:56.019000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:56.557000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:57.552000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:57.608000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:57.984000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:03:59.478000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:00.288000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:00.634000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:04.147000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:04.565000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:05.717000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:05.920000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:07.781000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:08.572000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:09.712000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:10.311000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:10.960000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:12.115000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:12.477000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:14.832000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:14.874000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:16.917000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:20.663000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:23.132000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:26.082000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:26.837000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:27.036000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:27.067000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:28.117000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:29.416000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:33.905000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:34.136000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:36.435000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:36.634000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:36.925000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:37.893000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:40.121000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:40.388000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:41.954000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:42.011000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:45.602000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:45.893000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:46.345000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:46.409000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:48.775000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:48.816000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:49.016000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:50.554000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:50.736000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:52.099000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:52.545000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:52.878000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:53.099000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:53.873000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:55.996000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:56.668000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:56.965000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:04:59.832000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:00.412000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:01.412000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:01.537000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:01.665000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:04.471000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:07.105000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:08.578000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:10.081000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:10.518000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:11.746000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:11.868000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:12.476000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:12.830000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:14.528000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:15.585000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:18.809000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:20.199000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:20.426000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:20.771000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:21.535000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:21.754000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:24.254000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:24.988000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:25.028000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:26.463000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:27.254000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:27.986000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:30.708000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:32.926000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:33.039000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:33.185000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:33.409000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:34.460000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:36.500000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:36.614000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:37.454000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:39.495000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:39.896000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:40.554000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:41.144000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:41.231000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:42.198000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:43.955000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:45.971000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:46.708000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:46.841000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:47.727000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:48.363000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:48.820000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:50.646000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:52.048000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:52.208000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:55.221000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:55.338000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:58.926000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:05:59.417000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:00.654000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:03.160000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:03.420000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:04.443000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:04.949000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:05.951000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:06.410000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:06.533000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:06.952000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:07.393000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:10.084000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:10.591000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:11.184000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:11.818000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:11.909000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:11.967000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:12.035000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:13.787000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:15.586000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:15.667000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:15.671000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:15.976000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:16.176000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:16.717000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:17.521000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:18.404000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:19.168000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:19.571000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:20.734000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:20.853000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:21.179000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:21.505000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:22.157000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:22.190000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:22.480000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:22.780000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:22.942000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:23.571000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:24.889000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:25.182000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:25.547000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:28.266000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:28.922000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:29.131000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:29.766000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:30.093000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:30.730000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:31.193000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:31.533000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:32.562000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:32.634000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:33.973000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:34.905000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:34.940000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:36.087000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:36.798000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:36.829000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:37.219000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:37.482000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:39.793000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:40.661000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:40.792000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:41.047000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:41.739000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:42.859000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:47.814000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:49.252000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:50.268000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:52.252000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:53.433000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:53.931000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:55.362000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:56.112000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:58.630000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:59.248000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:59.465000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:06:59.628000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:01.993000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:02.564000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:02.618000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:03.908000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:04.992000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:05.726000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:05.877000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:06.531000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:06.859000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:09.996000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:11.272000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:11.524000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:13.158000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:13.682000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:15.496000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:15.987000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:16.707000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:16.794000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:17.545000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:17.809000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:18.006000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:18.668000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:20.582000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:21.394000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:25.390000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:25.431000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:28.170000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:30.311000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:30.416000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:30.900000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:31.609000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:31.771000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:33.399000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:34.142000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:34.700000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:35.956000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:38.738000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:41.122000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:41.975000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:43.534000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:43.708000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:51.952000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:52.243000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:52.626000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:52.664000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:55.783000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:57.510000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:59.557000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:07:59.882000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:01.595000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:02.693000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:02.888000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:04.517000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:05.856000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:08.576000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:09.642000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:09.917000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:11.508000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:12.306000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:13.156000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:13.811000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:14.167000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:17.863000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:18.311000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:19.146000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:20.094000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:25.224000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:25.321000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:27.865000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:27.977000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:28.542000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:28.743000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:28.944000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:29.181000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:29.429000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:29.515000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:30.020000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:30.254000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:31.020000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:33.872000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:34.166000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:34.214000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:36.809000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:36.937000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:37.190000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:37.470000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:37.902000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:39.709000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:39.727000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:41.576000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:44.167000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:44.554000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:46.041000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:46.381000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:48.395000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:48.990000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:49.723000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:49.983000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:51.137000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:51.197000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:51.345000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:51.729000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:51.795000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:51.805000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:55.366000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:55.889000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:56.001000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:56.558000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:57.241000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:08:58.863000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:00.041000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:00.914000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:01.013000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:02.328000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:03.412000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:04.134000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:08.956000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:10.074000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:10.340000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:11.310000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:12.359000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:14.099000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:15.504000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:15.872000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:16.923000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:18.117000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:18.463000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:18.595000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:18.658000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:19.685000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:21.783000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:23.482000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:24.453000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:24.457000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:24.937000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:25.300000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:26.924000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:27.834000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:30.944000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:32.238000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:33.891000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:34.232000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:36.055000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:36.741000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:40.061000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:41.116000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:44.430000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:45.497000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:46.608000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:49.439000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:49.886000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:51.188000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:51.370000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:56.087000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:57.214000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:09:59.215000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:00.529000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:00.660000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:01.120000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:01.326000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:02.699000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:03.872000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:04.040000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:07.002000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:07.106000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:07.909000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:08.142000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:08.824000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:10.889000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:11.573000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:11.973000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:14.072000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:14.113000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:14.801000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:17.024000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:17.763000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:17.779000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:18.701000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:20.244000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:20.824000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:21.311000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:21.617000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:23.758000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:23.940000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:26.755000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:26.848000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:27.753000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:30.190000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:30.594000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:30.763000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:30.910000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:31.273000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:31.412000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:31.865000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:33.550000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:34.318000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:36.898000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:38.112000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:38.609000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:40.725000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:41.126000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:42.687000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:49.872000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:50.003000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:50.283000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:51.326000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:51.892000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:53.467000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:54.395000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:54.825000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:56.641000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:58.614000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:10:58.757000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:01.828000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:03.465000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:03.549000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:03.641000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:03.646000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:05.073000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:05.239000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:08.540000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:10.507000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:10.765000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:11.565000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:12.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:12.143000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:12.287000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:12.337000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:13.737000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:15.046000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:16.108000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:18.010000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:18.060000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:18.242000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:18.742000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:19.681000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:20.864000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:21.102000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:22.475000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:23.502000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:23.780000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:24.194000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:24.434000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:24.743000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:26.600000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:30.190000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:30.435000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:30.868000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:31.844000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:32.022000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:32.893000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:32.901000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:33.738000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:33.757000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:34.086000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:35.244000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:35.902000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:35.934000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:36.405000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:39.719000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:43.981000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:44.423000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:44.640000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:46.637000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:46.805000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:46.878000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:48.488000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:49.715000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:50.414000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:51.160000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:52.124000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:52.432000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:52.823000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:52.986000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:54.523000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:54.967000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:55.166000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:55.425000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:55.738000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:58.573000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:11:59.012000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:00.101000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:00.337000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:00.712000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:01.446000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:01.565000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:01.682000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:01.896000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:02.812000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:03.478000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:04.282000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:04.442000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:07.294000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:07.873000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:07.923000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:08.098000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:08.464000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:08.727000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:09.101000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:09.177000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:14.606000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:14.775000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:16.821000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:16.960000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:17.823000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:19.040000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:19.444000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:22.478000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:22.586000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:23.571000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:25.909000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:30.373000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:31.157000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:31.355000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:33.300000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:34.692000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:35.161000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:35.230000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:36.199000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:36.262000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:37.289000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:39.600000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:42.312000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:46.596000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:48.197000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:48.682000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:48.888000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:49.163000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:50.410000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:53.025000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:53.772000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:54.409000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:56.160000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:56.161000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:57.236000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:57.376000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:57.723000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:57.969000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:58.536000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:59.170000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:12:59.359000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:01.407000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:01.816000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:02.885000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:03.236000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:04.148000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:06.165000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:06.220000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:06.658000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:07.961000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:08.609000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:08.997000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:13.252000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:17.366000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:17.739000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:18.034000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:18.345000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:18.740000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:19.208000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:19.290000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:21.804000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:21.808000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:26.685000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:27.084000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:28.980000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:29.167000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:29.880000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:30.581000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:30.900000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:33.325000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:33.423000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:33.647000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:34.600000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:34.610000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:34.942000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:36.250000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:37.539000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:38.079000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:38.862000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:41.517000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:42.433000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:42.552000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:43.285000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:43.684000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:45.251000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:47.026000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:47.031000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:48.447000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:48.480000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:48.537000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:50.021000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:50.131000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:50.527000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:51.564000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:52.091000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:52.155000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:53.508000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:54.375000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:54.501000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:55.161000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:55.971000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:56.596000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:56.746000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:57.105000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:57.230000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:13:58.582000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:01.391000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:04.607000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:06.439000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:08.620000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:09.890000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:11.331000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:11.511000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:11.993000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:14.665000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:16.258000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:16.351000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:17.756000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:18.749000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:19.928000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:22.609000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:23.769000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:24.123000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:26.617000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:27.258000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:29.477000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:30.339000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:30.482000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:30.940000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:31.334000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:33.505000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:34.737000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:36.789000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:37.039000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:37.466000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:38.268000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:38.775000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:39.384000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:40.638000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:40.817000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:41.052000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:43.385000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:43.471000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:43.525000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:44.941000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:45.838000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:46.005000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:46.879000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:47.837000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:49.876000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:50.788000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:52.349000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:54.513000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:54.607000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:55.874000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:57.312000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:57.369000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:59.719000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:14:59.814000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:01.878000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:04.225000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:05.788000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:06.027000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:06.517000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:08.514000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:08.671000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:09.080000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:10.979000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:11.677000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:11.724000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:12.939000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:13.010000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:13.452000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:14.503000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:14.789000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:15.702000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:15.976000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:16.164000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:16.977000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:17.229000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:17.758000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:18.301000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:18.793000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:19.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:19.876000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:19.941000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:20.663000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:22.048000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:23.277000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:28.060000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:29.618000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:29.657000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:30.896000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:31.609000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:32.385000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:32.614000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:32.665000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:33.418000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:33.635000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:34.280000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:36.346000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:36.934000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:39.479000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:41.890000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:44.303000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:50.532000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:51.408000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:52.001000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:54.055000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:54.231000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:56.151000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:56.389000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:56.547000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:58.488000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:59.293000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:15:59.346000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:01.842000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:02.134000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:02.791000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:04.538000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:05.292000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:05.753000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:08.934000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:09.081000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:11.959000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:13.474000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:13.630000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:17.403000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:18.161000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:18.754000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:20.853000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:20.940000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:21.099000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:23.801000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:24.135000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:25.639000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:26.347000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:27.373000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:28.869000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:29.736000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:30.098000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:30.329000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:30.640000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:30.684000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:30.934000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:32.071000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:32.716000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:36.155000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:36.330000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:38.150000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:38.240000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:38.926000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:39.373000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:40.528000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:40.847000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:41.508000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:44.241000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:44.267000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:45.394000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:45.463000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:46.087000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:49.440000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:49.838000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:50.463000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:51.722000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:51.931000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:52.336000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:53.579000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:54.168000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:16:59.822000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:00.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:00.434000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:00.826000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:01.165000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:01.762000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:06.138000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:07.058000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:07.066000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:09.244000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:09.303000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:11.648000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:14.534000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:15.369000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:15.726000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:17.358000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:17.691000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:18.383000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:18.406000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:18.770000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:21.129000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:21.734000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:22.511000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:22.823000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:22.918000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:23.392000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:23.437000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:23.476000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:23.565000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:24.830000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:25.630000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:25.715000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:27.565000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:29.181000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:30.338000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:30.776000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:31.013000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:31.170000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:32.171000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:32.687000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:35.164000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:35.295000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:37.258000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:38.586000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:40.341000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:41.905000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:41.930000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:41.941000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:42.200000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:45.027000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:47.214000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:49.028000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:49.229000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:49.934000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:50.011000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:50.911000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:51.573000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:52.038000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:52.179000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:53.358000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:53.632000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:54.188000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:54.939000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:17:59.188000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:00.451000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:00.796000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:00.804000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:01.991000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:03.849000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:04.802000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:04.979000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:05.249000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:05.972000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:06.120000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:09.383000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:10.502000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:12.074000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:14.043000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:15.196000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:15.414000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:15.483000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:16.498000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:17.785000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:17.884000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:18.281000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:18.730000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:19.695000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:19.727000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:22.180000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:22.999000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:25.742000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:25.946000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:26.323000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:27.760000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:28.721000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:30.571000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:30.631000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:31.061000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:33.980000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:34.705000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:34.818000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:36.386000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:36.885000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:37.231000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:38.750000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:39.051000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:39.519000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:39.954000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:42.017000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:42.641000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:42.912000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:45.495000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:45.924000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:46.302000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:47.674000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:49.251000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:51.471000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:52.368000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:54.005000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:54.879000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:55.497000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:55.757000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:56.116000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:56.823000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:56.894000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:56.973000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:57.969000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:58.076000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:58.179000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:58.322000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:18:59.745000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:00.679000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:01.895000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:02.129000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:02.949000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:03.150000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:03.299000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:04.531000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:05.600000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:08.650000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:08.940000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:13.007000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:13.069000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:13.208000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:15.517000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:15.600000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:16.422000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:18.963000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:19.897000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:20.010000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:20.119000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:22.133000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:22.778000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:23.680000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:23.934000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:24.529000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:24.696000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:24.972000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:25.039000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:25.511000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:26.218000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:26.596000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:27.364000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:29.421000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:30.376000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:31.459000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:33.331000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:34.074000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:35.639000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:37.531000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:39.157000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:41.294000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:41.872000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:42.294000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:42.478000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:44.749000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:46.567000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:48.617000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:49.902000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:50.838000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:51.138000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:51.350000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:52.670000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:52.761000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:53.095000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:53.652000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:53.758000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:54.798000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:55.904000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:58.103000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:19:59.296000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:00.214000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:01.768000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:04.047000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:04.193000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:05.041000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:05.445000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:06.420000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:07.536000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:07.876000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:09.488000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:09.722000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:11.704000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:11.942000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:12.158000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:13.139000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:13.349000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:17.378000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:17.785000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:18.858000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:18.924000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:20.284000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:20.633000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:20.988000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:21.376000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:22.755000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:23.785000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:24.380000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:25.679000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:26.189000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:26.795000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:27.282000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:29.967000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:32.585000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:33.129000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:34.742000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:36.785000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:37.171000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:39.049000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:39.584000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:40.881000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:42.987000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:45.523000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:45.790000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:46.173000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:48.108000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:48.336000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:48.865000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:48.949000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:49.050000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:49.206000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:49.693000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:51.058000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:51.493000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:51.693000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:52.602000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:52.982000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:53.104000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:56.054000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:56.668000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:56.728000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:56.979000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:57.138000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:20:57.957000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:00.261000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:00.736000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:02.106000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:02.297000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:05.422000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:07.191000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:07.678000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:07.806000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:09.199000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:12.827000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:13.022000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:14.646000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:14.894000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:15.599000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:16.296000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:18.562000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:19.491000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:22.060000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:24.086000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:25.212000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:25.293000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:26.532000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:27.279000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:27.574000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:27.721000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:28.281000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:28.488000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:28.746000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:29.970000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:30.136000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:33.827000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:34.028000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:34.389000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:34.673000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:35.660000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:36.296000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:37.484000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:38.006000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:40.284000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:40.580000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:40.660000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:40.786000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:41.008000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:41.668000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:41.727000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:42.103000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:43.158000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:44.500000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:45.301000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:47.666000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:51.190000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:51.510000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:51.607000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:51.849000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:54.565000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:55.236000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:55.334000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:57.388000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:58.434000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:58.569000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:21:58.785000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:00.464000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:00.840000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:01.065000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:01.074000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:01.366000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:03.121000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:03.447000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:03.993000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:04.211000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:04.561000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:04.766000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:07.107000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:07.170000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:07.521000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:08.315000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:08.807000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:09.195000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:10.285000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:11.381000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:12.604000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:14.048000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:14.849000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:15.135000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:17.012000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:17.019000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:17.985000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:18.414000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:18.455000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:18.782000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:19.256000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:19.982000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:23.279000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:23.521000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:27.385000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:28.637000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:29.153000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:29.729000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:29.903000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:32.062000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:32.265000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:32.459000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:33.037000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:33.370000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:33.786000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:35.622000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:35.976000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:37.289000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:37.540000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:38.582000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:39.701000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:41.471000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:42.323000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:43.811000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:45.790000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:48.584000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:49.273000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:49.686000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:51.162000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:51.473000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:52.997000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:53.926000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:54.401000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:56.558000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:56.683000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:57.060000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:57.392000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:58.599000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:22:59.249000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:00.964000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:01.446000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:02.370000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:02.592000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:04.944000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:07.009000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:08.978000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:09.180000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:10.169000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:10.305000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:11.658000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:11.806000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:12.346000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:12.801000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:15.197000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:17.098000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:18.690000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:19.547000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:20.600000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:20.721000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:21.911000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:23.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:23.428000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:23.705000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:23.849000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:24.702000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:26.000000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:28.723000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:29.117000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:30.873000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:31.573000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:32.738000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:34.322000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:36.137000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:38.015000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:38.046000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:38.059000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:38.439000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:40.173000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:40.778000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:41.155000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:41.297000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:42.039000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:42.227000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:42.816000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:42.980000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:46.344000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:47.382000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:47.433000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:49.064000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:49.181000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:49.453000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:50.554000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:51.283000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:51.804000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:52.255000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:52.848000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:53.568000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:53.775000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:53.896000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:55.384000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:55.446000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:55.503000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:56.279000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:56.617000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:23:58.507000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:01.544000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:02.304000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:02.904000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:05.165000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:05.266000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:06.417000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:08.298000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:08.491000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:08.799000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:09.378000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:10.485000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:10.577000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:10.626000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:11.227000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:12.249000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:14.279000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:15.351000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:15.587000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:16.418000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:16.540000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:17.985000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:19.456000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:19.600000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:21.335000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:21.914000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:23.441000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:23.806000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:24.653000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:26.607000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:29.459000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:30.509000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:32.507000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:33.891000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:34.671000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:35.334000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:35.483000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:37.012000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:39.916000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:40.310000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:40.909000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:41.087000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:41.812000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:42.217000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:43.037000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:43.829000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:45.848000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:47.636000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:49.328000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:49.546000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:49.801000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:51.369000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:51.543000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:53.106000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:53.306000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:53.605000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:54.146000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:55.899000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:56.182000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:56.460000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:56.614000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:57.876000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:58.236000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:58.623000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:24:59.050000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:01.250000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:01.633000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:02.207000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:03.422000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:03.517000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:04.534000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:06.315000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:06.397000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:09.016000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:09.843000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:12.330000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:13.524000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:13.878000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:13.949000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:14.036000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:15.202000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:17.394000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:17.561000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:20.945000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:21.440000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:21.656000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:22.478000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:23.325000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:23.924000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:25.296000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:25.976000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:28.221000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:29.017000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:29.257000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:29.720000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:29.965000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:30.516000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:32.968000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:34.288000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:34.495000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:36.565000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:41.185000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:41.209000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:41.233000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:41.789000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:41.839000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:42.072000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:43.795000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:44.606000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:45.184000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:45.215000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:46.888000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:47.669000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:48.617000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:48.727000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:50.282000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:50.866000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:50.931000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:50.968000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:51.609000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:51.636000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:51.970000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:52.558000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:53.506000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:53.618000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:56.447000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:25:58.278000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:00.509000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:00.827000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:00.911000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:01.149000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:01.680000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:03.248000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:04.261000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:04.967000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:05.613000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:05.833000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:07.469000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:07.655000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:09.272000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:09.311000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:09.322000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:10.017000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:12.679000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:12.922000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:13.086000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:14.429000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:15.519000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:16.138000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:17.221000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:18.024000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:19.335000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:20.394000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:21.308000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:24.611000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:25.526000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:29.157000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:29.807000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:30.982000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:31.552000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:31.867000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:34.636000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:35.182000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:36.064000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:36.652000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:37.421000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:38.538000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:39.978000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:40.275000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:40.299000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:41.321000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:41.479000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:42.328000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:42.706000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:43.971000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:44.094000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:45.979000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:46.135000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:46.554000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:46.626000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:47.247000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:50.659000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:50.987000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:53.791000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:54.384000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:54.451000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:55.367000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:55.994000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:56.220000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:56.352000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:56.693000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:56.820000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:26:58.993000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:00.017000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:01.270000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:02.545000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:03.066000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:03.687000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:03.761000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:04.122000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:04.361000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:05.260000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:05.782000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:06.736000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:07.495000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:07.511000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:09.668000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:11.504000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:11.665000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:13.213000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:14.215000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:15.341000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:15.934000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:19.290000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:20.796000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:22.131000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:22.231000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:22.390000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:22.497000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:23.268000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:24.032000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:24.500000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:24.763000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:26.419000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:26.810000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:26.846000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:27.228000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:29.220000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:29.604000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:29.735000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:31.117000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:34.028000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:35.419000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:36.687000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:38.021000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:38.144000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:38.679000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:45.498000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:45.992000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:46.152000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:46.686000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:47.011000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:47.411000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:47.658000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:47.961000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:49.133000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:51.470000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:52.929000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:53.729000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:53.778000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:54.853000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:27:57.317000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:00.375000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:00.538000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:03.375000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:03.489000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:05.961000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:06.599000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:06.916000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:07.335000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:07.482000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:08.341000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:09.104000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:09.472000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:10.724000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:13.551000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:20.935000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:21.086000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:22.537000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:26.014000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:27.534000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:27.728000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:28.080000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:28.094000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:28.725000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:28.849000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:29.085000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:29.104000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:29.730000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:30.234000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:30.927000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:31.016000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:33.485000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:33.812000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:37.942000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:39.473000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:39.492000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:39.793000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:40.101000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:40.585000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:40.717000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:42.146000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:42.257000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:42.771000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:42.844000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:44.862000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:47.532000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:49.746000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:49.795000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:52.764000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:54.676000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:56.342000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:57.005000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:57.582000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:57.978000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:58.765000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:28:59.391000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:01.241000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:01.784000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:02.019000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:03.035000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:03.222000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:04.049000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:05.826000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:07.086000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:07.680000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:09.038000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:10.376000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:10.786000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:12.398000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:12.552000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:13.495000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:13.947000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:15.294000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:16.003000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:16.951000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:17.874000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:19.472000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:21.077000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:22.700000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:23.122000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:23.811000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:23.904000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:25.076000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:25.401000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:27.266000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:27.458000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:27.769000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:30.508000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:30.553000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:33.481000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:33.699000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:33.829000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:33.868000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:34.152000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:39.667000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:40.615000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:41.782000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:43.116000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:43.214000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:45.338000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:48.590000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:48.725000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:49.355000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:50.327000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:50.871000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:51.029000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:51.420000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:52.136000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:52.957000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:53.917000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:55.405000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:57.247000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:57.382000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:29:57.621000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:00.026000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:00.739000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:01.399000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:02.526000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:04.592000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:04.886000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:05.416000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:06.457000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:07.457000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:07.503000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:07.872000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:08.955000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:09.025000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:09.144000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:10.619000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:11.151000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:12.645000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:13.085000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:14.782000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:22.825000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:23.675000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:24.593000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:25.791000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:26.655000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:26.843000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:27.744000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:28.017000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:29.106000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:30.608000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:31.540000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:35.853000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:36.085000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:36.803000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:36.880000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:37.034000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:37.937000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:38.733000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:40.850000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:41.206000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:42.733000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:43.861000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:44.864000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:45.319000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:48.616000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:49.796000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:50.957000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:52.455000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:53.070000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:53.835000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:54.585000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:54.795000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:56.994000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:57.535000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:59.017000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:59.278000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:30:59.395000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:00.043000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:00.149000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:01.160000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:01.189000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:01.732000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:01.956000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:02.216000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:05.915000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:06.928000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:07.071000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:07.961000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:08.118000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:10.688000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:11.209000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:11.314000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:11.801000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:12.582000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:13.522000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:13.666000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:14.510000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:16.205000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:16.942000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:18.005000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:19.932000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:21.053000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:21.437000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:21.791000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:21.969000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:23.154000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:24.845000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:25.032000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:25.787000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:25.968000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:26.700000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:26.808000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:27.026000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:27.629000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:29.286000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:31.950000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:33.423000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:34.396000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:35.272000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:36.179000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:36.482000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:37.936000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:38.433000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:38.873000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:39.333000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:40.867000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:41.311000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:41.656000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:41.777000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:42.610000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:42.628000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:43.390000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:44.488000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:45.245000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:46.319000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:46.496000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:46.571000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:47.021000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:48.662000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:49.775000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:50.672000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:51.241000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:51.355000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:51.497000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:51.965000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:52.003000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:52.125000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:53.650000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:54.105000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:56.076000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:56.408000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:57.670000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:58.614000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:31:59.187000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:01.683000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:02.695000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:03.192000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:03.613000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:05.413000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:05.678000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:05.840000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:07.995000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:08.045000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:09.532000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:10.458000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:11.680000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:11.758000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:13.146000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:13.304000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:13.953000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:14.126000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:14.258000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:14.562000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:14.742000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:14.943000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:16.150000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:17.001000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:18.389000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:21.063000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:21.796000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:25.622000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:26.140000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:26.159000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:27.831000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:28.288000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:28.370000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:30.714000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:30.883000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:31.519000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:31.931000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:32.180000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:33.722000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:34.648000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:37.198000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:40.438000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:41.954000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:42.330000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:42.371000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:42.418000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:44.580000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:44.985000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:46.424000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:46.805000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:46.975000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:48.169000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:48.269000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:48.426000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:48.861000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:49.447000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:49.872000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:50.726000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:50.835000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:53.797000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:54.182000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:54.447000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:54.842000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:56.139000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:56.995000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:57.190000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:57.344000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:57.759000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:58.683000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:32:59.093000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:00.207000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:05.039000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:05.223000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:05.616000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:06.426000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:06.996000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:07.425000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:07.523000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:09.732000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:11.983000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:14.679000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:14.891000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:15.367000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:19.756000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:21.084000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:21.404000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:21.444000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:23.346000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:23.659000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:29.404000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:30.470000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:30.645000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:32.196000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:32.871000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:33.249000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:33.448000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:33.722000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:34.054000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:37.316000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:38.150000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:42.585000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:44.199000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:45.475000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:45.928000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:46.334000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:46.920000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:46.930000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:47.427000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:49.701000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:50.706000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:56.081000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:56.135000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:57.579000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:33:58.018000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:00.104000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:01.131000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:01.163000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:01.456000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:02.702000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:02.935000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:05.361000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:06.446000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:06.597000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:06.847000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:10.224000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:11.442000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:11.689000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:12.438000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:12.754000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:12.807000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:16.744000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:17.269000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:17.770000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:20.534000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:22.349000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:22.366000')
COMMIT
INSERT INTO EVENTS_RAW_LOG VALUES(0,'2022-04-27 00:34:28.383000')
COMMIT
INSERT INTO AGENT_MOVEMENT_RAW_LOG VALUES(99,25.0E0,'2022-04-27 00:00:04.349000','2022-04-27 00:34:28.797000')
COMMIT
INSERT INTO FLOWCHART_PROCESS_STATES_RAW_LOG VALUES(99,8,'MOVE','2022-04-27 00:00:04.349000','2022-04-27 00:34:28.797000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(2,99,6,'2022-04-27 00:34:28.797000')
COMMIT
INSERT INTO FLOWCHART_ENTRIES_RAW_LOG VALUES(3,99,NULL,'2022-04-27 00:34:28.797000')
COMMIT
INSERT INTO DESTROYED_AGENTS_RAW_LOG VALUES(99,'2022-04-27 00:34:28.797000')
COMMIT
DISCONNECT
